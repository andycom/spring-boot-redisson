---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by hamish.
--- DateTime: 2022/1/15 1:31
---

----redis中的锁  subuserId
----local lockKeys = {'001_1_delete','001_5_delete','001_7_delete','001_1_move_9090','001_9091_move_1'};
local lockKeys = {'001_11_delete','001_15_delete','001_17_delete','001_11_move_9090','001_9091_move_1'};
---- 目标锁 入参目标锁 ARGS[]
local supUserKeys = {'001_1_add_9','001_5_add_9','001_7_add_9'};
---- 需要检查的锁  入参需要检查的锁  KEYS[]
local checkKeys= {'001_1_delete','001_5_delete','001_7_delete','001_1_move','001_5_move','001_7_move'};

---- lua 中add 锁的核心逻辑


local function join_and_filter(checkKeys, lockKeys)
    local f=false;
    for i = 1, #checkKeys
    do for j=1 ,#lockKeys
        do print(checkKeys[i])
        local tstring=string.match(lockKeys[j], checkKeys[i]);
        if(not tstring)
          then
        else print("\"命中的逻辑锁\"",lockKeys[j])
            f=true
            break
            return f
          end
        end;
    end;
        if(f)
        then
            return f
        end;
end

print("lua 函数封装")

if(join_and_filter(checkKeys, lockKeys))
then
    print("命中锁 信息反馈不出")
    return true
else
    print("ok 没有命中锁 开始加锁")
    return false
end


